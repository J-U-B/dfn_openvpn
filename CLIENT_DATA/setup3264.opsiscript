[Actions]
include_insert "common.opsiinc"

Message "installing " + $ProductName$ + " (" + $ProductVersion$ + ")..."
if not (GetSystemType = "64 Bit System")
	LogError "Sorry, this installation package is only for 64bit systems"
	isFatalError
endif
if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
endif
if not(GetMsVersionInfo = "10.0")
	LogWarning "Only tested with Windows 10!"
endif

comment "Show product picture"
if (FileExists("%ScriptPath%\..\lib\icons\%installingProdName%.png"))
   comment "logo at local library/icons found."
   ShowBitmap "%ScriptPath%\..\lib\icons\%installingProdName%.png" $ProductName$
else
   comment "no logo at local library/icons, use from ScriptPath ..."
   ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $ProductName$
endif
if ($headlessmode$ = "true")
	comment "copying whole Scriptpath and change opsi-winst dir to local temp directory before uninstall section starts in case client has only access to the opsi-depot over vpn"
	ChangeDirectory "%Systemdrive%\tmp"
	Set $workingdir$ = "%Systemdrive%\tmp\dfn_openvpn"
	if FileExists($workingdir$)
		Files_rmloctmp /SysNative
	endif
	Files_cptoloctmp /SysNative
	comment "setting installation status to success in case client has only access to the opsi-depot over vpn, so that the installation status does not remain on setup in the database. Therefore the installation status in opsi-configed is not trustworthy and the status should be checked localy on target pc logs."
	opsiservicecall_manipulate_setup_status
	opsiservicecall_manipulate_install_status
	opsiservicecall_manipulate_action_prog
else
	Set $workingdir$ = "%SCRIPTPATH%"
endif
if FileExists($workingdir$ + "\delsub3264.opsiscript")
	comment "Start uninstall sub section"
	Sub $workingdir$ + "\delsub3264.opsiscript"
endif
if FileExists($InstallDir$)
	Files_delete
endif

if ($InstallService$ = "true")
	Set $InstallService$ = "/SELECT_SERVICE=1"
else
	Set $InstallService$ = "/SELECT_SERVICE=0"
endif
if ($InstallTAP$ = "true")
	set $InstallTAP$ = "/SELECT_TAP=1"
else
	set $InstallTAP$ = "/SELECT_TAP=0"
endif
if ($InstallGUI$ = "true")
	set $InstallGUI$ = "/SELECT_OPENVPNGUI=1"
else
	set $InstallGUI$ = "/SELECT_OPENVPNGUI=0"
endif
if ($InstallEasyRSA$ = "true")
	set $InstallEasyRSA$ = "/SELECT_EASYRSA=1"
else
	set $InstallEasyRSA$ = "/SELECT_EASYRSA=0"
endif

;=========================================================================================================================================================

comment "installing"
Message "Installing " + $ProductName$
Winbatch_add_cert
comment "Start setup program"
Winbatch_install
Sub_check_exitcode

if ($symbol$ = "false")
	LinkFolder_delete_icon
endif

if ($configfile$ = "true")
	if FileExists($workingdir$ + "\custom\config\")
		Files_copy_config
	else
		Comment "No config files found! You can either put the config files in %SCRIPTPATH%\custom\config\ with ending .ovpn and they will be copied automatically"
		Comment	"You can also put them in the " + $Installdir$ + "\config folder with ending .ovpn by hand or via script"
	endif
else
	LogWarning "OpenVPN needs config files to work correctly, please make sure to put config files in the " + $Installdir$ + "\config folder with ending .ovpn"
endif

comment "include custom post install file"
set $CustomPostInstall$ = GetProductProperty("custom-post-install","none")
if not ($CustomPostInstall$ = "none")
	if FileExists($workingdir$ + "\custom\" + $CustomPostInstall$)
		Sub $workingdir$ + "\custom\" + $CustomPostInstall$
	endif
endif

if ($headlessmode$ = "true")
	Files_rmloctmp /SysNative
endif

comment "Check if binaries exist"
if not( FileExists("%ProgramFilesSysnativeDir%\OpenVPN\bin\openvpn.exe"))
	LogError "openvpn.exe not found!"
	isFatalError
endif
if ($InstallGUI$ = "true")
	if not( FileExists("%ProgramFilesSysnativeDir%\OpenVPN\bin\openvpn-gui.exe"))
		LogError "openvpn-gui.exe not found!"
		isFatalError
	endif
endif

[Files_copy_config]
copy -se "$workingdir$\custom\config\*" "$InstallDir$\config\"

[Files_cptoloctmp]
copy -se "%ScriptPath%\*" "%Systemdrive%\tmp\dfn_openvpn\"

[Files_rmloctmp]
del -sf "$workingdir$"

[Files_delete]
del -sf "$InstallDir$"

[LinkFolder_delete_icon]
set_basefolder common_desktopdirectory
set_subfolder .
delete_element "OpenVPN GUI"

[Winbatch_add_cert]
certutil -addstore -f TrustedPublisher "$workingdir$\openvpn_certificate.cer"

[Winbatch_install]
"$workingdir$\$SetupFile$" /S /SELECT_SHORTCUTS=1 $InstallService$ $InstallTAP$ $InstallGUI$ $InstallEasyRSA$ /SELECT_LAUNCH=0

[opsiservicecall_manipulate_setup_status]
"method":"setProductActionRequest"
"params":[
			"$ProductId$"
			"%HostID%"
			"none"
		]
		
[opsiservicecall_manipulate_install_status]
"method": "setProductInstallationStatus"
"params":[
			"$ProductId$"
			"%HostID%"
			"installed"
		]

[opsiservicecall_manipulate_action_prog]
"method": "setProductActionProgress",
"params":[
			"$ProductId$"
			"%HostID%"
			"check local logs"
		]